name: Release and publish to npm
on:
  workflow_dispatch:
    inputs:
      input_version:
        type: choice
        description: What type of release?
        options:
          - patch
          - minor
          - major

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          # required
          # Appid from this app: https://github.com/settings/apps/axi92release
          app-id: 1500833
          private-key: ${{ secrets.PRIVATE_KEY }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: false
      - name: Debug inputs
        run: |
          echo "Type of release:${{ github.event.inputs.input_version }} from user ${GITHUB_ACTOR}"
      - name: Setup Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: lts/*
      - name: Cache node_modules
        id: node-modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            node_modules
          key: node-modules
      - name: Install dependencies
        run: npm i
      - name: Authenticate with registry
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.npm_token }}
      - name: Run release-it
        run: npx release-it ${{ github.event.inputs.input_version }} --ci
        env:
          BOT_GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: Create commit message
        run: |
          echo "chore: release $(jq -r '.version' package.json)" > commitMessageFile
      - name: Extract new version
        id: version
        run: echo "new=$(jq -r '.version' package.json)" >> "$GITHUB_OUTPUT"
      - name: Commit changes
        uses: iarekylew00t/verified-bot-commit@2a9d9e983e611793b54516a18e48361bbac691d9 # v1.4.1
        id: commit
        with:
          message-file: commitMessageFile
          token: ${{ steps.app-token.outputs.token }}
          if-no-commit: notice
          update-local: false # we don't need to pull the remote made changes via git to local
          files: |
            CHANGELOG.md
            package.json
            package-lock.json
      - name: Create Tag
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ steps.app-token.outputs.token }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/git/refs \
            -d @- <<EOF
          {
            "ref": "refs/tags/${{ steps.version.outputs.new }}",
            "sha": "${{ steps.commit.outputs.commit }}"
          }
          EOF
      - name: Attest
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # v2.2.0
        with:
          subject-path: '${{ github.workspace }}/*.tgz'
